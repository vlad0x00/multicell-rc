#!/bin/bash

if [[ $# -ne 1 || ($1 != "ltss" && $1 != "ccc" && $1 != "m") ]]; then
  echo "Must provide type of test: ltss (lambda/threshold/secretion/spacing), ccc (cells/cell types/cytokines), or m (memory)."
  exit 1
fi

# Lambda = sqrt(Beta / Alpha)
# Beta = 5
# Alpha = Beta / (Lambda ^ 2)

if [[ $1 == "ltss" ]]; then
  CELLS=( 343 )
  CELL_TYPES=( 20 )
  CYTOKINES=( 1 2 3 )
  LAMBDAS=( 3 4 5 6 7 )
  THRESHOLDS=( 1.0 1.25 1.50 )
  SECRETIONS_HIGH=( 25 40 55 )
  CELL_RADIUSES=( 1 )
  IF_GRID_SPACINGS=( 2.1 2.3 2.5 2.7 )
  WINDOWS=( 5 )
  MEMORIES=( 0 )
elif if [[ $1 == "ccc" ]]; then
  CELLS=( 50 100 200 400 )
  CELL_TYPES=( 1 10 25 50 )
  CYTOKINES=( 0 1 2 3 4 5 )
  LAMBDAS=( 3 )
  THRESHOLDS=( 1.5 )
  SECRETIONS_HIGH=( 55 )
  CELL_RADIUSES=( 1 )
  IF_GRID_SPACINGS=( 2.3 )
  WINDOWS=( 5 )
  MEMORIES=( 0 )
elif if [[ $1 == "m" ]]; then
  CELLS=( 512 )
  CELL_TYPES=( 64 )
  CYTOKINES=( 2 )
  LAMBDAS=( 3 )
  THRESHOLDS=( 1.5 )
  SECRETIONS_HIGH=( 55 )
  CELL_RADIUSES=( 1 )
  IF_GRID_SPACINGS=( 2.3 )
  WINDOWS=( 5 )
  MEMORIES=( 0 1 2 3 4 5 6 7 )
else
  echo "Invalid parameter"
  exit 1
fi

ITERATIONS=30

cd "$( cd "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"
cd ..

params_sets=()
iterations=()
for cells in ${CELLS[@]}; do
for cell_types in ${CELL_TYPES[@]}; do
for cytokines in ${CYTOKINES[@]}; do
for lambda in ${LAMBDAS[@]}; do
alpha=$(bc <<< "scale=2; 5 / ($lambda ^ 2)")
for threshold in ${THRESHOLDS[@]}; do
for secretion_high in ${SECRETIONS_HIGH[@]}; do
for cell_radius in ${CELL_RADIUSES[@]}; do
for if_grid_spacing in ${IF_GRID_SPACINGS[@]}; do
for window in ${WINDOWS[@]}; do
for memory in ${MEMORIES[@]}; do
for iteration in $(seq $ITERATIONS); do
  params_sets+=("-c $cells -p $cell_types -y $cytokines -a $alpha -t $threshold -H $secretion_high -r $cell_radius -x $if_grid_spacing -w $window -m $memory")
  iterations+=($iteration)
done
done
done
done
done
done
done
done
done
done
done

function do_run() {
  echo "PARAMS: $1"
  outdir="output-"$(echo $1 | tr -d '-' | tr ' ' '_')"-#$2"
  ./run $1 -O $outdir
  rm -rf $outdir
}
export -f do_run

if [[ ! -f model/libmodel.DP.SPAGENT.so ]]; then
  cd model
  make
  cd ..
fi

results_dir=utils/results
rm -rf $results_dir
parallel -j 30 --results $results_dir --link do_run  ::: "${params_sets[@]}" ::: "${iterations[@]}" >/dev/null
